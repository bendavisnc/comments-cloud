"({:full-path\n  \"/home/ben/Programming/forWork/comments-cloud/project.clj\",\n  :comments-found\n  (\"the presence of a figwheel configuration here\"\n   \"will cause figwheel to inject the figwheel client\"\n   \"into your build\"\n   \"openurls will pop open your application\"\n   \"in the default browser once figwheel has\"\n   \"started and complied your application\"\n   \"comment this out once it no longer serves you\"\n   \"to consolelog cljs datastructures make sure you enable devtools in chrome\"\n   \"httpsgithubcombinaryagecljsdevtools\"\n   \"this next build is an compressed minified build for\"\n   \"production you can build this with\"\n   \"lein cljsbuild once min\"\n   \"httpserverroot public  default and assumes resources\"\n   \"serverport   default\"\n   \"serverip\"\n   \"watch and update css\"\n   \"start an nrepl server into the running figwheel process\"\n   \"nreplport\"\n   \"server ring handler optional\"\n   \"if you want to embed a ring handler into the figwheel httpkit\"\n   \"server this is for simple ring servers if this\"\n   \"doesnt work for you just run your own server  see leinring\"\n   \"ringhandler helloworldserverhandler\"\n   \"to be able to open files in your editor from the heads up display\"\n   \"you will need to put a script on your path\"\n   \"that script will have to take a file path and a line number\"\n   \"ie in  binmyfileopener\"\n   \"binsh\"\n   \"emacsclient n\"\n   \"\"\n   \"openfilecommand myfileopener\"\n   \"if you are using emacsclient you can just use\"\n   \"openfilecommand emacsclient\"\n   \"if you want to disable the repl\"\n   \"repl false\"\n   \"to configure a different figwheel logfile path\"\n   \"serverlogfile tmplogsfigwheellogfilelog\"\n   \"setting up nrepl for figwheel and clojurescript dev\"\n   \"please see\"\n   \"httpsgithubcombhaumanleinfigwheelwikiusingthefigwheelreplwithinnrepl\"\n   \"need to add dev source path here to get userclj loaded\"\n   \"for cider\"\n   \"plugins cidercidernrepl\"\n   \"for nrepl dev you really need to limit output\")}\n {:full-path\n  \"/home/ben/Programming/forWork/comments-cloud/dev/user.clj\",\n  :comments-found\n  (\"user is a namespace that the clojure runtime looks for and\"\n   \"loads if its available\"\n   \"you can place helper functions in here this is great for starting\"\n   \"and stopping your webserver and other development services\"\n   \"the definitions in here will be available if you run lein repl or launch a\"\n   \"clojure repl some other way\"\n   \"you have to ensure that the libraries you require are listed in your dependencies\"\n   \"once you start down this path\"\n   \"you will probably want to look at\"\n   \"toolsnamespace httpsgithubcomclojuretoolsnamespace\"\n   \"and component httpsgithubcomstuartsierracomponent\"\n   \"this call will only work are long as your cljsbuild and\"\n   \"figwheel configurations are at the top level of your projectclj\"\n   \"and are not spread across different lein profiles\"\n   \"otherwise you can pass a configuration into startfigwheel manually\"\n   \"if you are in an nrepl environment you will need to make sure you\"\n   \"have setup piggieback for this to work\")}\n {:full-path\n  \"/home/ben/Programming/forWork/comments-cloud/dev/comments_cloud/general_util.clj\",\n  :comments-found (\"\" \"\" \"general helper methods\")}\n {:full-path\n  \"/home/ben/Programming/forWork/comments-cloud/dev/comments_cloud/comments_util.clj\",\n  :comments-found\n  (\"\"\n   \"\"\n   \"any methods used for parsing out comments from files\"\n   \"def getallcomments\"\n   \"fn\"\n   \"let\"\n   \"rootdir\"\n   \"fileseq\"\n   \"iofile config parsedir\"\n   \"alljavafiles\"\n   \"filter\"\n   \"fn f\"\n   \"\"\n   \"java\"\n   \"filenameutilsgetextension\"\n   \"getname f\"\n   \"rootdir\"\n   \"\"\n   \"alljavafiles\")}\n {:full-path\n  \"/home/ben/Programming/forWork/comments-cloud/dev/comments_cloud/builder.clj\",\n  :comments-found\n  (\"\"\n   \"\"\n   \"responsible for actually generating our word list\"\n   \"count\"\n   \"swap counts assoc eachword inc counts eachword\"\n   \"swap counts assoc eachword\"\n   \"concat\"\n   \"pmap\")}\n {:full-path\n  \"/home/ben/Programming/forWork/comments-cloud/dev/comments_cloud/config.clj\",\n  :comments-found ()})"